version: '3.8'

services:
  postgres_site_checker:
    container_name: postgresDB_site_checker
    image: postgres:alpine
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=site_checker
    volumes:
      - ./db-init/init-schema.sh:/docker-entrypoint-initdb.d/init-schema.sh
      #      - ./db-init/db.sql:/docker-entrypoint-initdb.d/db.sql
      - postgres_site_checker:/data/postgres
    #command: --init-file /data/application/db.sql
    ports:
      - "5430:5432"  # Ensure this line is present
    networks:
      - dockerSiteChecker

  pgadmin_site_checker:
    container_name: pgadmin_container_site_checker
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - ./db-init/servers.json:/pgadmin4/servers.json
      - ./db-init/pgpass:/pgpass
      - pgadmin_site_checker:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT:-5056}:80"
    networks:
      - dockerSiteChecker
    depends_on:
      - postgres_site_checker
    restart: unless-stopped

  dev_site_checker:
    container_name: dev_site_checker-api
    image: site_checker_api_dev:0.1
    build:
      context: .
      target: development
      dockerfile: ./Dockerfile
    command: npm run start:dev
    ports:
      #      - 3011:3000
      - 3105:3000
      - 9254:9229
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
      - app-public:/usr/src/app/public
    depends_on:
      - postgres_site_checker
      - pgadmin_site_checker
    restart: unless-stopped
    networks:
      - dockerSiteChecker

  prometheus:
    container_name: prometheus_site_checker
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - dockerSiteChecker
    depends_on:
      - dev_site_checker
    restart: unless-stopped

  grafana:
    container_name: grafana_site_checker
    image: grafana/grafana:latest
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    ports:
      - "3205:3000"
    networks:
      - dockerSiteChecker
    depends_on:
      - prometheus
    restart: unless-stopped

  node-exporter:
    container_name: node_exporter_site_checker
    image: prom/node-exporter:latest
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"
    networks:
      - dockerSiteChecker
    restart: unless-stopped

networks:
  dockerSiteChecker:
    driver: bridge

volumes:
  postgres_site_checker:
  pgadmin_site_checker:
  app-public:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
